


def assign_topics(model, count_vectorizer, text):
        
                # create a count vectorizer object
        
                count_vectorizer = CountVectorizer(stop_words='english', ngram_range=(2,2))
        
                # fit and transform count vectorizer using the text data
        
                count_data = count_vectorizer.fit_transform(text.values.astype('U'))
        
                # get the topic probabilities for each document
        
                topic_probability_scores = model.transform(count_data)
        
                # get the topic index with the highest probability score
        
                topic = topic_probability_scores.argmax(axis=1)
        
                return topic

# assign the topics to the dataframe

df['topic'] = assign_topics(lda, count_vectorizer, df['Negative_Review'])
